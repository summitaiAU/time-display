name: EAS Update (Expo)

on:
  push:
    branches: [ "main" ]

jobs:
  eas-update:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Clean install
        run: |
          rm -rf node_modules
          rm -f package-lock.json

      - name: Install Latest EAS CLI
        run: npm install -g eas-cli@latest json

      # Create a completely new package.json with SDK 52 compatible versions
      - name: Create fresh package.json
        run: |
          echo '{
            "name": "time-display",
            "version": "1.0.0",
            "private": true,
            "main": "node_modules/expo/AppEntry.js",
            "scripts": {
              "start": "expo start",
              "android": "expo start --android",
              "ios": "expo start --ios",
              "web": "expo start --web"
            },
            "dependencies": {
              "expo": "~52.0.0",
              "expo-status-bar": "~1.11.1",
              "expo-updates": "~0.24.8",
              "react": "19.0.0",
              "react-dom": "19.0.0",
              "react-native": "0.73.2",
              "react-native-safe-area-context": "4.8.2",
              "react-native-web": "~0.19.6"
            },
            "devDependencies": {
              "@babel/core": "^7.20.0",
              "@babel/plugin-transform-export-namespace-from": "^7.23.4",
              "babel-preset-expo": "~10.0.0"
            }
          }' > package.json

      # Create minimal App.js
      - name: Create App.js
        run: |
          echo 'import React from "react";
          import { StyleSheet, Text, View } from "react-native";
          
          export default function App() {
            return (
              <View style={styles.container}>
                <Text style={styles.text}>Time Display App</Text>
              </View>
            );
          }
          
          const styles = StyleSheet.create({
            container: {
              flex: 1,
              backgroundColor: "#000",
              alignItems: "center",
              justifyContent: "center",
            },
            text: {
              color: "#fff",
              fontSize: 24,
            },
          });' > App.js

      # Create babel config
      - name: Create babel.config.js
        run: |
          echo 'module.exports = function(api) {
            api.cache(true);
            return {
              presets: ["babel-preset-expo"]
            };
          };' > babel.config.js

      # Create fresh metro config
      - name: Create metro.config.js
        run: |
          echo 'const { getDefaultConfig } = require("expo/metro-config");
          
          const config = getDefaultConfig(__dirname);
          
          module.exports = config;' > metro.config.js

      - name: Install Dependencies
        run: npm install --legacy-peer-deps

      - name: Create app.json
        run: |
          echo '{
            "expo": {
              "name": "Time Display",
              "slug": "time-display",
              "owner": "${{ secrets.EXPO_USERNAME }}",
              "version": "1.0.0",
              "orientation": "portrait",
              "icon": "./assets/icon.png",
              "userInterfaceStyle": "light",
              "splash": {
                "image": "./assets/splash.png",
                "resizeMode": "contain",
                "backgroundColor": "#000000"
              },
              "assetBundlePatterns": [
                "**/*"
              ],
              "ios": {
                "supportsTablet": true
              },
              "android": {
                "adaptiveIcon": {
                  "foregroundImage": "./assets/adaptive-icon.png",
                  "backgroundColor": "#000000"
                }
              },
              "web": {
                "favicon": "./assets/favicon.png"
              },
              "extra": {
                "eas": {
                  "projectId": "ae646493-acc0-49e6-92b8-62f14fe11797"
                }
              },
              "runtimeVersion": {
                "policy": "sdkVersion"
              },
              "updates": {
                "url": "https://u.expo.dev/ae646493-acc0-49e6-92b8-62f14fe11797"
              }
            }
          }' > app.json

      - name: Create eas.json
        run: |
          echo '{
            "cli": {
              "version": ">=3.13.0"
            },
            "build": {
              "development": {
                "developmentClient": true,
                "distribution": "internal"
              },
              "preview": {
                "distribution": "internal"
              },
              "production": {}
            },
            "submit": {
              "production": {}
            }
          }' > eas.json

      - name: Create assets directory
        run: mkdir -p assets

      - name: Download assets
        run: |
          curl -s https://raw.githubusercontent.com/expo/expo/master/templates/expo-template-blank/assets/icon.png -o assets/icon.png
          curl -s https://raw.githubusercontent.com/expo/expo/master/templates/expo-template-blank/assets/splash.png -o assets/splash.png
          curl -s https://raw.githubusercontent.com/expo/expo/master/templates/expo-template-blank/assets/adaptive-icon.png -o assets/adaptive-icon.png
          curl -s https://raw.githubusercontent.com/expo/expo/master/templates/expo-template-blank/assets/favicon.png -o assets/favicon.png

      - name: Expo Login
        run: CI=1 npx expo login -u ${{ secrets.EXPO_USERNAME }} -p ${{ secrets.EXPO_PASSWORD }}
        
      - name: Initialize EAS Project
        run: npx eas init --non-interactive --force

      - name: EAS Update
        run: npx eas update --branch main --message "GitHub Action update" --non-interactive
