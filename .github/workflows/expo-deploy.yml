name: EAS Update (Expo)

on:
  push:
    branches: [ "main" ]

jobs:
  eas-update:
    runs-on: ubuntu-latest
    steps:
      # Section 2: Node Version Requirements
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: 18  # Node 18+ required for React Native (Section 2)

      # Section 9: EAS CLI Version Compatibility
      - name: Install Latest EAS CLI
        run: npm install -g eas-cli@latest

      # Section 19: Expo SDK Version Compatibility with Expo Go
      # Updated to use SDK 52 for physical device compatibility
      - name: Update package.json for SDK 52 compatibility
        run: |
          # Use json tool to modify package.json
          npm install -g json
          
          # Set Expo to SDK 52
          json -I -f package.json -e 'this.dependencies.expo = "~52.0.0"'
          
          # Set React Native to compatible version for Expo 52
          json -I -f package.json -e 'this.dependencies["react-native"] = "0.78.0"'
          
          # Set React to compatible version for React Native 0.78
          json -I -f package.json -e 'this.dependencies.react = "19.0.0"'
          
          # Update expo-updates to compatible version for SDK 52
          json -I -f package.json -e 'this.dependencies["expo-updates"] = "~0.24.0"'

      # Section 10: Use legacy-peer-deps for dependency conflicts
      - name: Install Dependencies
        run: npm install --legacy-peer-deps

      # Section 9: EAS CLI Version in eas.json
      - name: Create Compatible eas.json
        run: |
          echo '{
            "cli": {
              "version": ">=15.0.0"
            },
            "build": {
              "development": {
                "developmentClient": true,
                "distribution": "internal"
              },
              "preview": {
                "distribution": "internal"
              },
              "production": {}
            },
            "submit": {
              "production": {}
            }
          }' > eas.json

      # Section 5 & 7: EAS Configuration in app.json
      - name: Update app.json with owner and SDK version
        run: |
          if [ -f app.json ]; then
            # Add owner field to existing app.json
            json -I -f app.json -e 'this.expo = this.expo || {}'
            json -I -f app.json -e 'this.expo.owner = "${{ secrets.EXPO_USERNAME }}"'
            json -I -f app.json -e 'this.expo.runtimeVersion = {"policy": "sdkVersion"}'
            # Ensure SDK 52
            json -I -f app.json -e 'this.expo.sdkVersion = "52.0.0"'
          else
            # Create new app.json with all required fields including SDK 52
            echo '{
              "expo": {
                "name": "Time Display",
                "slug": "time-display",
                "owner": "${{ secrets.EXPO_USERNAME }}",
                "sdkVersion": "52.0.0",
                "version": "1.0.0",
                "orientation": "portrait",
                "icon": "./assets/icon.png",
                "splash": {
                  "image": "./assets/splash.png",
                  "resizeMode": "contain",
                  "backgroundColor": "#000000"
                },
                "updates": {
                  "fallbackToCacheTimeout": 0
                },
                "assetBundlePatterns": [
                  "**/*"
                ],
                "ios": {
                  "supportsTablet": true
                },
                "android": {
                  "adaptiveIcon": {
                    "foregroundImage": "./assets/adaptive-icon.png",
                    "backgroundColor": "#000000"
                  }
                },
                "web": {
                  "favicon": "./assets/favicon.png"
                },
                "runtimeVersion": {
                  "policy": "sdkVersion"
                }
              }
            }' > app.json
          fi

      # Section 12: Asset Files for Expo
      - name: Create assets directory
        run: mkdir -p assets

      - name: Download assets
        run: |
          curl -s https://raw.githubusercontent.com/expo/expo/master/templates/expo-template-blank/assets/icon.png -o assets/icon.png
          curl -s https://raw.githubusercontent.com/expo/expo/master/templates/expo-template-blank/assets/splash.png -o assets/splash.png
          curl -s https://raw.githubusercontent.com/expo/expo/master/templates/expo-template-blank/assets/adaptive-icon.png -o assets/adaptive-icon.png
          curl -s https://raw.githubusercontent.com/expo/expo/master/templates/expo-template-blank/assets/favicon.png -o assets/favicon.png

      # Section 3: Using CI=1 instead of --non-interactive
      # Section 4: GitHub Secrets & Masking
      - name: Expo Login
        run: CI=1 npx expo login -u ${{ secrets.EXPO_USERNAME }} -p ${{ secrets.EXPO_PASSWORD }}
        
      # Section 7 & 8: EAS Project Initialization
      - name: Initialize EAS Project
        run: npx eas init --non-interactive --force

      # Section 6: EAS Update with required parameters
      - name: EAS Update
        run: npx eas update --branch main --message "GitHub Action update $(date)" --non-interactive
