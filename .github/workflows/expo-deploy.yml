name: EAS Update (Expo)

on:
  push:
    branches: [ "main" ]

jobs:
  eas-update:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install EAS CLI
        run: npm install --global eas-cli@latest

      - name: Check for expo-updates
        run: |
          if ! grep -q '"expo-updates":' package.json; then
            npm install expo-updates --legacy-peer-deps
          fi

      - name: Install Dependencies
        run: npm install --legacy-peer-deps

      - name: Setup EAS JSON
        run: echo '{"cli":{"version":">=15.0.0"},"build":{"development":{"developmentClient":true,"distribution":"internal"},"preview":{"distribution":"internal"},"production":{}},"submit":{"production":{}}}' > eas.json

      - name: Create assets directory
        run: mkdir -p assets

      - name: Download assets
        run: |
          curl -s https://raw.githubusercontent.com/expo/expo/master/templates/expo-template-blank/assets/icon.png -o assets/icon.png
          curl -s https://raw.githubusercontent.com/expo/expo/master/templates/expo-template-blank/assets/splash.png -o assets/splash.png
          curl -s https://raw.githubusercontent.com/expo/expo/master/templates/expo-template-blank/assets/adaptive-icon.png -o assets/adaptive-icon.png
          curl -s https://raw.githubusercontent.com/expo/expo/master/templates/expo-template-blank/assets/favicon.png -o assets/favicon.png

      - name: Expo Login
        run: CI=1 npx expo login -u ${{ secrets.EXPO_USERNAME }} -p ${{ secrets.EXPO_PASSWORD }}
        
      - name: Create EAS Project
        run: npx eas-cli init --non-interactive --force || echo "EAS project may already exist"

      - name: EAS Update
        run: npx eas update --branch main --message "GitHub Action update" --non-interactive
